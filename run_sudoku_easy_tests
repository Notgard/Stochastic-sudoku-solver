#!/usr/bin/bash
declare -a easy_sudoku_puzzles
#some easy puzzles to test
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="0000183b305c"
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="0001d5d6314e"
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="000212406270"
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="00023580f347"
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="00031006ebf1"
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="0003af4e2943"
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="0004125f628d"
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="0004464633b4"
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="0004686971dc"
easy_sudoku_puzzles[${#easy_sudoku_puzzles[@]}]="0004bab224ce"
#make compile main sudoku solving C program
make clean && make
#set file name
stats_file="./benchmark/easy/stats-$$.txt"
#try the easy puzzles
for i in "${easy_sudoku_puzzles[@]}"
do
    result=$(./bin/main "easy.txt" "$i")
    echo -e "$result"
    #get the execution time for the x axis and the final cost of the algorithm for the y axis
    exec_time=$(echo "$result" | grep ">> CPU Execution time of the sudoku solving simulation :" | awk 'NF>1{print $NF}')
    end_cost=$(echo "$result" | grep ">> Best solution (lowest cost) found during the execution of the simulation :" | awk 'NF>1{print $NF}')
    echo "$exec_time $end_cost" >> "$stats_file"
done
#create benchmark graph
./bin/benchmark "1" "$stats_file"