#!/usr/bin/bash
declare -a hard_sudoku_puzzles
#some hard pzzules to test
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="00005f662e09"
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="00009e4900fa"
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="0000b2c3fc62"
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="0000d2fa4f03"
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="00011fedd787"
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="00013f7e562a"
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="000160237251"
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="000175e5f83b"
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="0001767b888a"
hard_sudoku_puzzles[${#hard_sudoku_puzzles[@]}]="0001786dfc8c"
#make compile main sudoku solving C program
make clean && make
#set file name
stats_file="./benchmark/hard/stats-$$.txt"
#try the hard puzzles
for i in "${easy_sudoku_puzzles[@]}"
do
    result=$(./bin/main "hard.txt" "$i")
    echo -e "$result"
    #get the execution time for the x axis and the final cost of the algorithm for the y axis
    exec_time=$(echo "$result" | grep ">> CPU Execution time of the sudoku solving simulation :" | awk 'NF>1{print $NF}')
    end_cost=$(echo "$result" | grep ">> Best solution (lowest cost) found during the execution of the simulation :" | awk 'NF>1{print $NF}')
    echo "$exec_time $end_cost" >> "$stats_file"
done
#create benchmark graph
./bin/benchmark "1" "$stats_file"